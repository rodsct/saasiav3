
services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: saasiav3
      POSTGRES_USER: saasiav3
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-saasiav3_secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saasiav3 -d saasiav3"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password_123}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_secure_password_123}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile_inline: |
        FROM node:20-alpine
        RUN apk add --no-cache libc6-compat curl git
        WORKDIR /app
        RUN echo "Initializing Next.js app with required dependencies"
        RUN npm create next-app@latest . --typescript --tailwind --eslint --app --no-src-dir --import-alias '@/*' --yes
        RUN npm install prisma @prisma/client next-auth stripe --legacy-peer-deps
        COPY . .
        RUN echo "Overriding with uploaded files (if any)"
        RUN ls -la
        RUN if [ -f package.json ]; then npm install --legacy-peer-deps; fi
        RUN echo "Creating app directory structure if missing"
        RUN mkdir -p app
        RUN echo '@tailwind base; @tailwind components; @tailwind utilities; body { margin: 0; padding: 20px; font-family: system-ui; }' > app/globals.css
        RUN echo 'export default function Home() { return <div><h1 style={{color: "green"}}>ðŸš€ SaaS v3 - Running Successfully!</h1><p>Your Next.js application is working on EasyPanel!</p><p>PostgreSQL and Redis are connected and ready.</p></div>; }' > app/page.tsx
        RUN echo 'import "./globals.css"; export default function RootLayout({ children }: { children: React.ReactNode }) { return <html lang="en"><body>{children}</body></html>; }' > app/layout.tsx
        EXPOSE 3000
        HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 CMD curl -f http://localhost:3000 || exit 1
        CMD ["sh", "-c", "npm run dev 2>/dev/null || npm run start 2>/dev/null || npx next dev"]
    restart: unless-stopped
    expose:
      - "3000"
    volumes:
      - app_uploads:/app/public/uploads
    environment:
      DATABASE_URL: postgresql://saasiav3:${POSTGRES_PASSWORD:-saasiav3_secure_password_123}@postgres:5432/saasiav3
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_123}@redis:6379
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-tu_nextauth_secret_muy_largo_32_caracteres_2024}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-https://tu-proyecto.easypanel.app}
      NODE_ENV: production
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL:-https://tu-proyecto.easypanel.app}
      SITE_URL: ${NEXT_PUBLIC_SITE_URL:-https://tu-proyecto.easypanel.app}
      SITE_NAME: ${SITE_NAME:-Aranza.io}
      AUTHOR_NAME: ${AUTHOR_NAME:-Aranza Team}
      DEFAULT_N8N_WEBHOOK: ${DEFAULT_N8N_WEBHOOK:-https://infra-v2-n8n-v2.uclxiv.easypanel.host/webhook/saasiav3}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@tu-proyecto.easypanel.app}
      PORT: 3000
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      EMAIL_SERVER_HOST: ${EMAIL_SERVER_HOST:-}
      EMAIL_SERVER_PORT: ${EMAIL_SERVER_PORT:-587}
      EMAIL_SERVER_USER: ${EMAIL_SERVER_USER:-}
      EMAIL_SERVER_PASSWORD: ${EMAIL_SERVER_PASSWORD:-}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  default:
    external: false
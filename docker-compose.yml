
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saasiav3-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: saasiav3
      POSTGRES_USER: saasiav3
      POSTGRES_PASSWORD: saasiav3_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - saasiav3-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saasiav3 -d saasiav3"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saasiav3-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://saasiav3:saasiav3_password@postgres:5432/saasiav3
      - NEXTAUTH_URL=https://tu-dominio.com
      - NEXTAUTH_SECRET=tu-super-secreto-nextauth-cambiar-en-produccion-muy-largo-y-seguro
      - SECRET=tu-super-secreto-nextauth-cambiar-en-produccion-muy-largo-y-seguro
      - NEXT_PUBLIC_SITE_URL=https://tu-dominio.com
      - DEFAULT_N8N_WEBHOOK=https://infra-v2-n8n-v2.uclxiv.easypanel.host/webhook/saasiav3
      - GOOGLE_CLIENT_ID=tu-google-client-id
      - GOOGLE_CLIENT_SECRET=tu-google-client-secret
      - GITHUB_CLIENT_ID=tu-github-client-id
      - GITHUB_CLIENT_SECRET=tu-github-client-secret
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - saasiav3-network
    volumes:
      - app_uploads:/app/public/uploads

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: saasiav3-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - saasiav3-network
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
  app_uploads:

networks:
  saasiav3-network:
    driver: bridge